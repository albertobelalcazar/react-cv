{"ast":null,"code":"var _jsxFileName = \"C:\\\\devPrivateGitBeto\\\\reactcv20200904\\\\src\\\\js\\\\components\\\\Aboutme.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport parse from \"html-react-parser\";\nimport Mountain from './../../assets/about_mountain.jpg';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nexport default function MyComponent() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://api.lyrics.ovh/v1/artist/title\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, item.name, \" \", item.price)));\n  }\n} // export default function App() {\n//     const [post, setPost] = useState(null);\n//     const [loading, setLoading] = useState(false);\n//     useEffect(() => {\n//         Esto es para comprobar si muestra el loader \n//         const timer = setTimeout(() => {\n//             Axios.get(\"http://alberto.codes/wp/wp-json/wp/v2/posts/15\")\n//                 .then(res => {\n//                     setPost(res.data);\n//                 })\n//             setLoading(true);\n//         }, 3000);\n//         return () => clearTimeout(timer);\n//          TODO: crear un div de full screnn loader;\n//         Axios.get(\"http://alberto.codes/wp/wp-json/wp/v2/posts/15\")\n//             .then(res => {\n//                 setPost(res.data);\n//             })\n//         setLoading(true);\n//     }, [setPost]);\n//     return (\n//         <div className=\"aboutme\">\n//             <div className=\"aboutme_post\">\n//                 {loading ? (post && (<div className=\"aboutme__content\">\n//                     <div className=\"aboutme__content_image\">\n//                         <img src={Mountain} alt=\"about me\" />\n//                     </div>\n//                     <div className=\"aboutme__content_text\">\n//                         <h1>{post.title.rendered}</h1>\n//                         <div>{parse(post.content.rendered)}</div>\n//                     </div>\n//                 </div>)) : <CircularProgress />}\n//             </div>\n//             {loading ? console.log(loading) : console.log(loading)}\n//         </div>\n//     );\n// }\n// -------------------\n// function Aboutme() {\n//     const wpURL = 'http://alberto.codes/wp/wp-json/wp/v2/posts/15';\n//     const [data, setData] = useState([]);\n//     const getData = () => {\n//         fetch(wpURL)\n//             .then(function (response) {\n//                 console.log(response)\n//                 return response.json();\n//             })\n//             .then(function (data) {\n//                 console.log(data);\n//                 setData(data)\n//             });\n//     }\n//     useEffect(() => {\n//         getData()\n//     }, [])\n//     return (\n//         <div className=\"aboutme\">\n//             <h1>{data.id}</h1>\n//             <h1>{ }</h1>\n//         </div>\n//     )\n// }\n// export default Aboutme","map":{"version":3,"sources":["C:/devPrivateGitBeto/reactcv20200904/src/js/components/Aboutme.js"],"names":["React","useState","useEffect","Axios","parse","Mountain","CircularProgress","MyComponent","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","message","map","item","id","name","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAIA,eAAe,SAASC,WAAT,GAAuB;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC,CAHkC,CAKlC;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACH,KANT,EAOQ;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAbT;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACW,OAAnB,CAAP;AACH,GAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,GAFM,MAEA;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBACX;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACE,IADV,OACiBF,IAAI,CAACG,KADtB,CADH,CADL,CADJ;AASH;AACJ,C,CAGD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport parse from \"html-react-parser\";\r\nimport Mountain from './../../assets/about_mountain.jpg';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nexport default function MyComponent() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    // Note: the empty deps array [] means\r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    useEffect(() => {\r\n        fetch(\"https://api.lyrics.ovh/v1/artist/title\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItems(result);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <ul>\r\n                {items.map(item => (\r\n                    <li key={item.id}>\r\n                        {item.name} {item.price}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default function App() {\r\n//     const [post, setPost] = useState(null);\r\n//     const [loading, setLoading] = useState(false);\r\n\r\n//     useEffect(() => {\r\n//         Esto es para comprobar si muestra el loader \r\n//         const timer = setTimeout(() => {\r\n//             Axios.get(\"http://alberto.codes/wp/wp-json/wp/v2/posts/15\")\r\n//                 .then(res => {\r\n//                     setPost(res.data);\r\n//                 })\r\n//             setLoading(true);\r\n//         }, 3000);\r\n//         return () => clearTimeout(timer);\r\n//          TODO: crear un div de full screnn loader;\r\n\r\n//         Axios.get(\"http://alberto.codes/wp/wp-json/wp/v2/posts/15\")\r\n//             .then(res => {\r\n//                 setPost(res.data);\r\n//             })\r\n//         setLoading(true);\r\n\r\n//     }, [setPost]);\r\n\r\n//     return (\r\n//         <div className=\"aboutme\">\r\n//             <div className=\"aboutme_post\">\r\n//                 {loading ? (post && (<div className=\"aboutme__content\">\r\n//                     <div className=\"aboutme__content_image\">\r\n//                         <img src={Mountain} alt=\"about me\" />\r\n//                     </div>\r\n//                     <div className=\"aboutme__content_text\">\r\n//                         <h1>{post.title.rendered}</h1>\r\n//                         <div>{parse(post.content.rendered)}</div>\r\n\r\n//                     </div>\r\n//                 </div>)) : <CircularProgress />}\r\n\r\n//             </div>\r\n//             {loading ? console.log(loading) : console.log(loading)}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n// -------------------\r\n\r\n\r\n\r\n// function Aboutme() {\r\n//     const wpURL = 'http://alberto.codes/wp/wp-json/wp/v2/posts/15';\r\n//     const [data, setData] = useState([]);\r\n//     const getData = () => {\r\n//         fetch(wpURL)\r\n//             .then(function (response) {\r\n//                 console.log(response)\r\n//                 return response.json();\r\n//             })\r\n//             .then(function (data) {\r\n//                 console.log(data);\r\n//                 setData(data)\r\n//             });\r\n//     }\r\n//     useEffect(() => {\r\n//         getData()\r\n//     }, [])\r\n\r\n//     return (\r\n//         <div className=\"aboutme\">\r\n//             <h1>{data.id}</h1>\r\n//             <h1>{ }</h1>\r\n\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Aboutme\r\n"]},"metadata":{},"sourceType":"module"}